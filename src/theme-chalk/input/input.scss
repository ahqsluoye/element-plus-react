@use '../common/var';
@use 'sass:map';

@mixin inset-prepend-border($color, $important: false) {
    @if $important == true {
        box-shadow: 1px 0 0 0 $color inset, 0 1px 0 0 $color inset, 0 -1px 0 0 $color inset !important;
    } @else {
        box-shadow: 1px 0 0 0 $color inset, 0 1px 0 0 $color inset, 0 -1px 0 0 $color inset;
    }
}

@mixin inset-append-border($color) {
    box-shadow: 0 1px 0 0 $color inset, 0 -1px 0 0 $color inset, -1px 0 0 0 $color inset;
}

@mixin inset-prepend-input-border($color) {
    box-shadow: 1px 0 0 0 $color inset, 1px 0 0 0 $color, 0 1px 0 0 $color inset, 0 -1px 0 0 $color inset !important;
}

@mixin inset-append-input-border($color) {
    box-shadow: -1px 0 0 0 $color, -1px 0 0 0 $color inset, 0 1px 0 0 $color inset, 0 -1px 0 0 $color inset !important;
}

@mixin mixed-input-border($color) {
    box-shadow: 0 0 0 1px $color inset;
}

@mixin inset-input-border($color, $important: false) {
    @if $important == true {
        box-shadow: 0 0 0 1px $color inset !important;
    } @else {
        box-shadow: 0 0 0 1px $color inset;
    }
}

// @mixin placeholder {
//     &::-webkit-input-placeholder {
//         color: var(--#{$namespace}-text-color-placeholder);
//     }
//     &:-moz-placeholder {
//         color: var(--#{$namespace}-text-color-placeholder);
//     }
//     &::-moz-placeholder {
//         color: var(--#{$namespace}-text-color-placeholder);
//     }
//     &:-ms-input-placeholder {
//         color: var(--#{$namespace}-text-color-placeholder);
//     }
// }

.#{$namespace}-textarea,
.#{$namespace}-input,
.#{$namespace}-input-group {
    --#{$namespace}-input-text-color: var(--#{$namespace}-text-color-regular);
    --#{$namespace}-input-border: var(--#{$namespace}-border-color);
    --#{$namespace}-input-hover-border: var(--#{$namespace}-border-color-hover);
    --#{$namespace}-input-focus-border-color: var(--#{$namespace}-color-primary);
    --#{$namespace}-input-transparent-border: 0 0 0 1px transparent inset;
    --#{$namespace}-input-border-color: var(--#{$namespace}-border-color);
    --#{$namespace}-input-border-radius: 4px;
    --#{$namespace}-input-bg-color: var(--#{$namespace}-fill-color-blank);
    --#{$namespace}-input-icon-color: var(--#{$namespace}-text-color-placeholder);
    --#{$namespace}-input-placeholder-color: var(--#{$namespace}-text-color-placeholder);
    --#{$namespace}-input-hover-border-color: var(--#{$namespace}-border-color-hover);
    --#{$namespace}-input-clear-hover-color: var(--#{$namespace}-text-color-secondary);
    --#{$namespace}-input-focus-border-color: var(--#{$namespace}-color-primary);
}

.#{$namespace}-textarea {
    position: relative;
    display: inline-block;
    width: 100%;
    vertical-align: bottom;
    font-size: 14px;

    .#{$namespace}-textarea__count {
        color: var(--#{$namespace}-color-info);
        background: var(--#{$namespace}-fill-color-blank);
        position: absolute;
        font-size: 12px;
        line-height: 14px;
        bottom: 5px;
        right: 10px;
    }

    &.is-plain {
        .#{$namespace}-textarea__inner {
            box-shadow: none !important;
            resize: none !important;
        }
    }

    &.is-disabled {
        .#{$namespace}-textarea__inner {
            background-color: var(--#{$namespace}-disabled-bg-color);
            color: var(--#{$namespace}-disabled-text-color);
            box-shadow: 0 0 0 1px var(--#{$namespace}-border-color-light) inset;
            cursor: not-allowed;
        }
    }

    &.is-active {
        .#{$namespace}-textarea__inner {
            outline: none;
            box-shadow: 0 0 0 1px var(--#{$namespace}-color-primary) inset;
        }
    }

    &.is-exceed {
        .#{$namespace}-textarea__inner {
            border-color: var(--#{$namespace}-color-error);
        }

        .#{$namespace}-textarea__count {
            color: var(--#{$namespace}-color-error);
        }
    }
}

.#{$namespace}-textarea__inner {
    font-family: 'PingFang-SC-Regular', 'PingFang SC', sans-serif;
    position: relative;
    display: block;
    resize: vertical;
    padding: 5px 15px;
    line-height: 1.5;
    box-sizing: border-box;
    width: 100%;
    font-size: inherit;
    font-family: inherit;
    background-color: var(--#{$namespace}-input-bg-color, var(--#{$namespace}-fill-color-blank));
    color: var(--#{$namespace}-input-text-color, var(--#{$namespace}-text-color-regular));
    background-image: none;
    @include inset-input-border(var(--#{$namespace}-input-border-color, var(--#{$namespace}-border-color)));
    border-radius: 4px;
    transition: box-shadow 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
    border: none;
    outline: none;

    @include placeholder();

    &:hover {
        @include inset-input-border(var(--#{$namespace}-input-hover-border-color));
    }

    &:focus {
        outline: none;
        @include inset-input-border(var(--#{$namespace}-color-primary));
    }

    &.is-warning {
        @include inset-input-border(var(--#{$namespace}-color-warning));
        color: var(--#{$namespace}-color-warning) !important;
    }

    &.is-error {
        @include inset-input-border(var(--#{$namespace}-color-error));
        color: var(--#{$namespace}-color-error) !important;
    }
}

.#{$namespace}-input {
    position: relative;
    display: inline-flex;
    width: 100%;
    font-size: 14px;
    line-height: var(--#{$namespace}-input-height, 32px);
    box-sizing: border-box;
    vertical-align: middle;

    &.is-active {
        .#{$namespace}-input__wrapper {
            outline: none;
            box-shadow: 0 0 0 1px var(--#{$namespace}-input-focus-color, var(--#{$namespace}-color-primary)) inset;
        }
    }

    &.is-disabled {
        cursor: not-allowed;

        .#{$namespace}-input__wrapper {
            background-color: var(--#{$namespace}-disabled-bg-color);
            box-shadow: 0 0 0 1px var(--#{$namespace}-border-color-light) inset;
        }

        .#{$namespace}-input__inner {
            color: var(--#{$namespace}-disabled-text-color);
            -webkit-text-fill-color: var(--#{$namespace}-disabled-text-color);
            cursor: not-allowed;
        }

        &::placeholder {
            color: var(--#{$namespace}-disabled-text-color);
        }

        .#{$namespace}-input__icon {
            cursor: not-allowed;
        }

        &.is-plain {
            .#{$namespace}-input__wrapper {
                background-color: transparent !important;
            }
        }
    }

    &.is-plain {
        .#{$namespace}-input__wrapper {
            box-shadow: none !important;
        }
    }

    &.is-exceed {
        .#{$namespace}-input__wrapper {
            @include mixed-input-border(var(--#{$namespace}-color-error));
        }

        .#{$namespace}-input__suffix {
            .#{$namespace}-input__count {
                color: var(--#{$namespace}-color-error);
            }
        }
    }

    .#{$namespace}-input__count {
        height: 100%;
        display: inline-flex;
        align-items: center;
        color: var(--#{$namespace}-color-info);
        font-size: 12px;

        .#{$namespace}-input__count-inner {
            background: var(--#{$namespace}-fill-color-blank);
            line-height: initial;
            display: inline-block;
            padding-left: 8px;
        }
    }
}

.#{$namespace}-input__icon {
    height: inherit;
    line-height: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s;
    margin-left: 8px;
}

.#{$namespace}-input__clear,
.#{$namespace}-input__password,
.#{$namespace}-input__click {
    cursor: pointer;

    &:hover {
        color: var(--#{$namespace}-color-primary);
    }
}

.#{$namespace}-input__wrapper {
    display: inline-flex;
    flex-grow: 1;
    align-items: center;
    justify-content: center;
    padding: 1px 11px;
    background-color: var(--#{$namespace}-input-bg-color, var(--#{$namespace}-fill-color-blank));
    background-image: none;
    border-radius: 4px;
    transition: box-shadow 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
    @include inset-input-border(var(--#{$namespace}-input-border-color, var(--#{$namespace}-border-color)));

    &:hover {
        @include inset-input-border(var(--#{$namespace}-input-hover-border-color));
    }

    &.is-focus {
        @include inset-input-border(var(--#{$namespace}-input-focus-border-color));
    }

    &.is-warning {
        @include inset-input-border(var(--#{$namespace}-color-warning));
        color: var(--#{$namespace}-color-warning) !important;
    }

    &.is-error {
        @include inset-input-border(var(--#{$namespace}-color-error));
        color: var(--#{$namespace}-color-error) !important;
    }
}

.#{$namespace}-input__inner {
    font-family: 'PingFang-SC-Regular', 'PingFang SC', sans-serif;
    width: 100%;
    flex-grow: 1;
    -webkit-appearance: none;
    color: var(--#{$namespace}-input-text-color, var(--#{$namespace}-text-color-regular));
    font-size: inherit;
    height: var(--#{$namespace}-input-inner-height, 32px);
    line-height: var(--#{$namespace}-input-inner-height, 32px);
    padding: 0;
    outline: none;
    border: none;
    background: none;
    box-sizing: border-box;
    @include placeholder();

    &:focus {
        outline: none;
    }
    // override edge default style
    &[type='password']::-ms-reveal {
        display: none;
    }

    &.#{$namespace}-date {
        cursor: pointer;
    }
}

.#{$namespace}-input__suffix {
    display: inline-flex;
    white-space: nowrap;
    flex-shrink: 0;
    flex-wrap: nowrap;
    text-align: center;
    color: var(--#{$namespace}-input-icon-color, var(--#{$namespace}-text-color-placeholder));
    transition: all 0.3s;
    pointer-events: none;
}

.#{$namespace}-input__suffix-inner {
    pointer-events: all;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.#{$namespace}-input__prefix {
    display: inline-flex;
    white-space: nowrap;
    flex-shrink: 0;
    flex-wrap: nowrap;
    text-align: center;
    color: var(--#{$namespace}-input-icon-color, var(--#{$namespace}-text-color-placeholder));
    transition: all 0.3s;
    pointer-events: none;
}

.#{$namespace}-input__prefix-inner {
    pointer-events: all;
    display: inline-flex;
    align-items: center;
    justify-content: center;

    & > :last-child {
        margin-right: 8px;
    }

    & > :first-child {
        margin-left: 8px;

        &.#{$namespace}-input__icon {
            margin-left: 0;
        }
    }
}

.#{$namespace}-input__validateIcon {
    pointer-events: none;
}

// input-group=========================================================

// 复合型输入框
.#{$namespace}-input-group {
    display: inline-flex;
    width: 100%;
    align-items: stretch;

    & > .#{$namespace}-input__inner {
        vertical-align: middle;
        display: table-cell;
    }

    &.is-plain {
        .#{$namespace}-input__wrapper {
            box-shadow: none !important;
        }
    }
}

.#{$namespace}-input-group__append,
.#{$namespace}-input-group__prepend {
    background-color: var(--#{$namespace}-fill-color-light);
    color: var(--#{$namespace}-color-info);
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-height: 100%;
    border-radius: 4px;
    padding: 0 20px;
    white-space: nowrap;

    &:focus {
        outline: none;
    }

    .#{$namespace}-select,
    .#{$namespace}-button {
        display: inline-block;
        margin: 0 -20px;
    }

    button.#{$namespace}-button,
    button.#{$namespace}-button:hover,
    div.#{$namespace}-select .#{$namespace}-input__inner,
    div.#{$namespace}-select:hover .#{$namespace}-input__inner {
        border-color: transparent;
        background-color: transparent;
        color: inherit;
    }

    .#{$namespace}-button,
    .#{$namespace}-input {
        font-size: inherit;
    }

    button.#{$namespace}-button,
    button.#{$namespace}-button:hover,
    div.#{$namespace}-select .#{$namespace}-input__wrapper,
    div.#{$namespace}-select:hover .#{$namespace}-input__wrapper {
        border-color: transparent;
        background-color: transparent;
        color: inherit;
    }

    .#{$namespace}-button,
    .#{$namespace}-input {
        font-size: inherit;
    }
}

.#{$namespace}-input-group__prepend {
    border-right: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    @include inset-prepend-border(var(--#{$namespace}-input-border-color));
}

.#{$namespace}-input-group__append {
    border-left: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    @include inset-append-border(var(--#{$namespace}-input-border-color));
}

.#{$namespace}-input-group--prepend {
    & > .#{$namespace}-input__wrapper {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    .#{$namespace}-input-group__prepend {
        .#{$namespace}-select {
            .#{$namespace}-input {
                .#{$namespace}-input__inner {
                    box-shadow: none !important;
                }

                .#{$namespace}-input__wrapper {
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                    @include inset-prepend-border(var(--#{$namespace}-input-border-color));
                    background-color: var(--#{$namespace}-fill-color-blank);

                    &.is-error {
                        @include inset-prepend-border(var(--#{$namespace}-color-error), true);
                    }
                }

                &.is-focus,
                &.is-active {
                    .#{$namespace}-input__inner {
                        box-shadow: none !important;
                    }

                    .#{$namespace}-input__wrapper {
                        @include inset-prepend-input-border(var(--#{$namespace}-input-focus-border-color));
                        z-index: 2;

                        &:focus {
                            outline: none;
                            z-index: 2;
                            @include inset-prepend-input-border(var(--#{$namespace}-input-focus-border-color));
                        }
                    }
                }
            }
            &:hover {
                .#{$namespace}-input__inner {
                    box-shadow: none !important;
                }

                .#{$namespace}-input__wrapper {
                    z-index: 1;
                    @include inset-prepend-input-border(var(--#{$namespace}-input-hover-border-color));
                }
            }
        }
    }
}

.#{$namespace}-input-group--append {
    & > .#{$namespace}-input__wrapper {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .#{$namespace}-input-group__append {
        .#{$namespace}-select {
            .#{$namespace}-input {
                .#{$namespace}-input__inner {
                    box-shadow: none !important;
                }

                .#{$namespace}-input__wrapper {
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                    @include inset-append-input-border(var(--#{$namespace}-input-border-color));
                    background-color: var(--#{$namespace}-fill-color-blank);

                    &.is-error {
                        @include inset-append-input-border(var(--#{$namespace}-color-error));
                    }
                }

                &.is-focus,
                &.is-active {
                    .#{$namespace}-input__inner {
                        box-shadow: none !important;
                    }
                    .#{$namespace}-input__wrapper {
                        z-index: 2;
                        @include inset-append-input-border(var(--#{$namespace}-input-focus-border-color));
                    }
                }
            }

            &:hover {
                .#{$namespace}-input__inner {
                    box-shadow: none !important;
                }

                .#{$namespace}-input__wrapper {
                    z-index: 1;
                    @include inset-append-input-border(var(--#{$namespace}-input-hover-border-color));
                }
            }
        }
    }
}

.#{$namespace}-input--large {
    --#{$namespace}-input-height: var(--#{$namespace}-component-size-large);
    --#{$namespace}-input-inner-height: calc(var(--#{$namespace}-input-height, var(--#{$namespace}-component-size-large)) - 2px);
    font-size: 14px;
}

.#{$namespace}-input--small {
    --#{$namespace}-input-height: var(--#{$namespace}-component-size-small);
    --#{$namespace}-input-inner-height: var(--#{$namespace}-component-size-small);
    font-size: 12px;
}
