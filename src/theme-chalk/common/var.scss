@use 'sass:math';
@use 'sass:map';
@use 'sass:color';

$namespace: 'el' !default;
$common-separator: '-' !default;
$element-separator: '__' !default;
$modifier-separator: '--' !default;
$state-prefix: 'is-' !default;
$fa-font-family: 'el-icon' !default;
$fa-font-path: './fonts' !default;

// types
$types: primary, success, warning, danger, error, info;

// Color
$colors: () !default;
$colors: map.deep-merge(
    (
        'white': #ffffff,
        'black': #000000,
        'primary': (
            'base': #409eff,
        ),
        'success': (
            'base': #67c23a,
        ),
        'warning': (
            'base': #e6a23c,
        ),
        'danger': (
            'base': #f56c6c,
        ),
        'error': (
            'base': #f56c6c,
        ),
        'info': (
            'base': #909399,
        ),
    ),
    $colors
) !default;

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

@mixin set-color-mix-level($type, $number, $mode: 'light', $mix-color: $color-white) {
    --#{$namespace}-color-#{$type}-#{$mode}-#{$number}: #{color.mix($mix-color, map.get($colors, $type, 'base'), math.percentage(math.div($number, 10)))};
}

$bg-color: () !default;
$bg-color: map.merge(
    (
        'page': #0a0a0a,
        '': #141414,
        'overlay': #1d1e1f,
    ),
    $bg-color
) !default;
