import { h } from 'preact';
import { useMemo } from 'react';
import PageContainer from '@/Layout/PageContainer';
import DemoBlock from '@/Layout/DemoBlock';
import RightNav from '@/Layout/RightNav';
import { EventsTable, PropsTable } from '@/Layout/Table';
import BasicUsage, { html as basic_usage_html } from './basic-usage';
import Backdrop, { html as backdrop_html } from './backdrop';
import Sizes, { html as sizes_html } from './sizes';
import Overflow, { html as overflow_html } from './overflow';
import CustomizationContent, { html as customization_content_html } from './customization-content';

const ModalDoc = () => {
const propsData = useMemo(
() => [
['visible', '是否显示模态框（可控）', 'boolean', '`true` | `false`', 'false'],
['defaultVisible', '默认是否显示模态框', 'boolean', '`true` | `false`', 'false'],
['backdrop', '背景', 'boolean', '`true` | `false` | `static`', 'true'],
['size', '大小', 'string', '`full` | `large` | `md` | `small` | `xs`', '`small`'],
['overflow', '滚动条', 'boolean', '`true` | `false`', 'false'],
],
[],
);

    return (
        <PageContainer>
            <section class="content element-doc content">
                <h2>ElDialog 对话框</h2>
                <p>用于消息提示、确认消息和提交的模态对话框组件。</p>

                <DemoBlock
                    title="基础用法"
                    content={'show属性绑定的状态控制对话框展示与关闭，onHide事件的回调方法来控制展示状态'}
                    source={<BasicUsage />}
                    highlight={basic_usage_html}
                />

                <DemoBlock
                    title="背景控制"
                    content={'backdrop属性默认true 有背景且点击背景关闭对话框，false无背景，"static"有阴影背景点击背景不能关闭'}
                    source={<Backdrop />}
                    highlight={backdrop_html}
                />

                <DemoBlock title="大小" tip={'`size` 属性取 `full` 、 `large` 、 `md` 、 `small` 、 `xs` 可控制对话框大小，默认 `small` 大小'} source={<Sizes />} highlight={sizes_html} />

                <DemoBlock title="滚动条" content={'overflow属性，在内容过长时内容区出现滚动条'} source={<Overflow />} highlight={overflow_html} />

                <DemoBlock title="插入内容" content={'可以向内容区插入表格、输入框等内容'} source={<CustomizationContent />} highlight={customization_content_html} />

                <h3>Modal属性</h3>
                <PropsTable data={propsData} />

                <h3>ModalHeader属性</h3>
                <PropsTable
                    data={[
                        ['closeButton', '当设置为 true, 显示关闭按钮', 'boolean', '`true` | `false`', 'true'],
                        ['border', '标题是否有边框', 'boolean', '`true` | `false`', 'false'],
                        ['titleStyle', '自定义标题内联样式', 'JSX.CSSProperties', '', '—'],
                    ]}
                />

                <h3>Modal事件</h3>
                <EventsTable
                    data={[
                        ['beforeEnter', '显示前动画过渡的回调函数', '() => void'],
                        ['afterEnter', '显示后动画过渡的回调函数', '() => void'],
                        ['onEnter', '显示中动画过渡的回调函数', '() => void'],
                        ['beforeLeave', '退出前动画过渡的回调函数', '() => void'],
                        ['onLeave', '退出中动画过渡的回调函数', '() => void'],
                        ['afterLeave', '退出后动画过渡的回调函数', '() => void'],
                        ['onOpen', '显示时的回调函数', '() => void'],
                        ['onClose', '关闭对话框时触发', '对话框当前show属性状态'],
                    ]}
                />

                <h3>ModalHeader事件</h3>
                <EventsTable data={[['onClose', '关闭对话框时触发', '对话框当前show属性状态']]} />

                <RightNav />
            </section>
        </PageContainer>
    );

};

export default ModalDoc;
