import { h, Fragment } from 'preact';
import { useMemo } from 'react';
import PageContainer from '@/Layout/PageContainer';
import DemoBlock from '@/Layout/DemoBlock';
import RightNav from '@/Layout/RightNav';
import { PropsTable } from '@/Layout/Table';
import BasicUsage, { html as basic_usage_html } from './basic-usage';
import ConfigurableRows, { html as configurable_rows_html } from './configurable-rows';
import Animation, { html as animation_html } from './animation';
import CustomizedTemplate, { html as customized_template_html } from './customized-template';
import LoadingState, { html as loading_state_html } from './loading-state';

const PlaceholderDoc = () => {
return (
<>
<PageContainer>

<section class="content element-doc content">
<h2>Placeholder 骨架屏</h2>
<p>在需要等待加载内容的位置设置一个骨架屏，某些场景下比 Loading 的视觉效果更好。</p>

                    <DemoBlock title="基础用法" tip="基础的骨架效果。" source={<BasicUsage />} highlight={basic_usage_html} />

                    <DemoBlock title="更多参数" content="可以配置骨架屏段落数量，以便更接近真实渲染效果。" source={<ConfigurableRows />} highlight={configurable_rows_html} />

                    <DemoBlock
                        title="动画效果"
                        content="我们提供了一个开关标志，表明是否显示加载动画， 设置 `active` 属性，所有的 `Placeholder` 的子节点将显示动画。"
                        source={<Animation />}
                        highlight={animation_html}
                    />

                    <DemoBlock title="网格" content="通过设置 rows 属性和 columns 属性来控制行数和列数" source={<CustomizedTemplate />} highlight={customized_template_html} />

                    <DemoBlock title="图形" source={<LoadingState />} highlight={loading_state_html} />

                    <h3>Paragraph属性</h3>
                    <PropsTable
                        data={useMemo(
                            () => [
                                ['rows', '显示行数量', 'number', '—', '2'],
                                ['rowHeight', '行高', 'number', '—', '16'],
                                ['rowMargin', '行间距', 'number', '—', '16'],
                                ['graph', '是否显示图形', 'boolean | circle | square | image', '—', 'false'],
                                ['active', '是否处于激活状态', 'boolean', 'true/false', 'false'],
                            ],
                            [],
                        )}
                    />

                    <h3>Grid属性</h3>
                    <PropsTable
                        data={useMemo(
                            () => [
                                ['rows', '显示行数量', 'number', '—', '5'],
                                ['columns', '显示列数量', 'number', '—', '5'],
                                ['rowHeight', '行高', 'number', '—', '16'],
                                ['rowMargin', '行间距', 'number', '—', '20'],
                                ['active', '是否处于激活状态', 'boolean', 'true/false', 'false'],
                            ],
                            [],
                        )}
                    />
                    <h3>Graph属性</h3>
                    <PropsTable
                        data={useMemo(
                            () => [
                                ['width', '宽度', 'number | string', '—', '100%'],
                                ['height', '高度', 'number', '—', '200'],
                                ['active', '是否处于激活状态', 'boolean', 'true/false', 'false'],
                            ],
                            [],
                        )}
                    />

                    <RightNav />
                </section>
            </PageContainer>
        </>
    );

};

export default PlaceholderDoc;
