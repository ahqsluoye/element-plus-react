import { h } from 'preact';
import { useEffect, useMemo, useRef } from 'react';
import PageContainer from '@/Layout/PageContainer';
import DemoBlock from '@/Layout/DemoBlock';
import RightNav from '@/Layout/RightNav';
import Prism from 'prismjs';
import { PropsTable } from '@/Layout/Table';
import Basic, { html as basic_html } from './basic';
import DifferentTypes, { html as different_types_html } from './different-types';
import Positioning, { html as positioning_html } from './positioning';
import Offsetting, { html as offsetting_html } from './offsetting';
import RawHtml, { html as raw_html_html } from './raw-html';
import NoClose, { html as no_close_html } from './no-close';

const NotificationDoc = () => {
const propsData = useMemo(
() => [
['title', '标题', 'string', '—'],
['message', '通知栏正文内容', 'string | VNode', '—'],
['type', '通知类型', 'success | warning | info | error', 'info'],
['icon', '自定义图标，该属性会覆盖 type 的图标。', 'string | Component', '—'],
['dangerouslyUseHTMLString', '是否将 message 属性作为 HTML 片段处理', 'boolean', 'false'],
['className', '自定义类名', 'string', '—'],
['duration', '显示时间，单位为毫秒。 设为 0 则不会自动关闭', 'number', '3000'],
['position', '自定义弹出位置', 'top-right | top-left | bottom-right | bottom-left', 'top-right'],
['showClose', '是否显示关闭按钮', 'boolean', 'true'],
['center', '文字是否居中', 'boolean', 'false'],
['onClose', '关闭时的回调函数, 参数为被关闭的 message 实例', 'function', '—'],
['offset', 'Notification 距离窗口顶部的偏移量', 'number', '20'],
],
[],
);

    const demo1Ref = useRef<HTMLDivElement>();

    useEffect(() => {
        demo1Ref.current.innerHTML = Prism.highlight(
            `const { close } = Notification({
    title: '消息',
    type: 'info',
    message: '这是一条消息的提示消息',

});

setTimeout(() => {
close();
}, 2000);`,
Prism.languages.tsx,
'tsx',
);
}, []);

    return (
        <PageContainer>
            <section class="content element-doc content">
                <h2>Notification 通知</h2>
                <p>悬浮出现在页面角落，显示全局的通知提醒消息。</p>

                <DemoBlock
                    title="基础用法"
                    content={'适用性广泛的通知栏'}
                    tip="Notification 组件提供通知功能，Plat 注册了`notify`方法，接收一个`options`字面量参数，在最简单的情况下，你可以设置`title`字段和`message`字段，用于设置通知的标题和正文。默认情况下，经过一段时间后 Notification 组件会自动关闭，但是通过设置`duration`，可以控制关闭的时间间隔，特别的是，如果设置为`0`，则不会自动关闭。注意：`duration`接收一个`Number`，单位为毫秒，默认为`4500`。"
                    source={<Basic />}
                    highlight={basic_html}
                />

                <DemoBlock
                    title="带有倾向性"
                    content={'带有 icon，常用来显示「成功、警告、消息、错误」类的系统消息'}
                    tip="Notification 组件准备了四种通知类型：`success`, `warning`, `info`, `error`。通过`type`字段来设置，除此以外的值将被忽略。同时，我们也为 Notification 的各种 type 注册了方法，可以在不传入`type`字段的情况下像`警告`和`错误`那样直接调用。"
                    source={<DifferentTypes />}
                    highlight={different_types_html}
                />

                <DemoBlock
                    title="自定义弹出位置"
                    content={'可以让 Notification 从屏幕四角中的任意一角弹出'}
                    tip="使用`position`属性定义 Notification 的弹出位置，支持四个选项：`topRight`、`topLeft`、`bottomRight`、`bottomLeft`，默认为`topRight`。"
                    source={<Positioning />}
                    highlight={positioning_html}
                />

                <DemoBlock
                    title="带有偏移"
                    content={'让 Notification 偏移一些位置'}
                    tip="Notification 提供设置偏移量的功能，通过设置 `offset` 字段，可以使弹出的消息距屏幕边缘偏移一段距离。注意在同一时刻，所有的 Notification 实例应当具有一个相同的偏移量。"
                    source={<Offsetting />}
                    highlight={offsetting_html}
                />

                <DemoBlock title="使用HTML片段" content={'让 Notification 偏移一些位置'} source={<RawHtml />} highlight={raw_html_html} />

                <DemoBlock title="隐藏关闭按钮" content={'可以不显示关闭按钮'} tip="将showClose属性设置为false即可隐藏关闭按钮。" source={<NoClose />} highlight={no_close_html} />

                <h3>属性</h3>
                <PropsTable data={propsData} />

                <h3>Notification 方法</h3>
                <p>调用 `Notification` 会返回当前 `Notification` 的实例。 如果需要手动关闭实例，可以调用它的 close 方法。</p>

                <div className="language-tsx">
                    <pre style={{ padding: 15, borderRadius: 4 }}>
                        <code ref={demo1Ref} />
                    </pre>
                </div>

                <RightNav />
            </section>
        </PageContainer>
    );

};

export default NotificationDoc;
